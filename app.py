from pymongo import MongoClient
from flask import render_template
from flask import make_response
from flask_restplus import Resource, Api

# Helper Functions
#app = Flask(__name__)


api = Api(app)

# Connect to mongodb mlab
mongo_port = 27107
db_name = 'comp4920'
collection_name = 'exercises'
mongo_host = "mongodb://admin:admin123@ds331558.mlab.com:31558/comp4920"
client = MongoClient(host=mongo_host, port=mongo_port)
db = client[db_name]
exercises = db[collection_name]

@api.route('/exercises', methods=['GET'])
class AllCollections(Resource):
	def get(self):
		# Obtain collection
		collection = db.exercises.find()

		output_list = []

		# Abort if collection not found
		if not collection:
			api.abort(404, "There are no collections in the database")

		# For testing, print out all records
		for record in collection:
			#print(record)
			exercise_id = record['id']
			exercise_name = record['exercise']
			description = record['description']
			output_dict = {
				"id": exercise_id,
				"exercise": exercise_name,
				"description": description
			}
			output_list.append(output_dict)
			#print(output_list)
		return make_response(render_template('exercises.html',workout=output_list[:5]))
		#return render_template('exercises.html', workout=output_list[:5])

		
		

	# Method used by developers only. Exercises will not be generated by the user
	# def post(self)

if __name__ == '__main__':    
    app.run(debug=True)